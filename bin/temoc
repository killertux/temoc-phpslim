#!/usr/bin/env php
<?php

$tag = "0.3.1";

$executable = executable_dir($tag) . executable();
if (!file_exists($executable)) {
    download_executable($tag);
}

$result_code = 0;
passthru($executable . ' ' . implode(" ", array_slice($argv, 1)), $result_code);
exit($result_code);

function download_executable(string $tag): void {
    switch(PHP_OS_FAMILY) {
        case "Windows":
            $file = download_file("https://github.com/killertux/temoc/releases/download/{$tag}/temoc_{$tag}_x86_64-pc-windows-gnu.zip", "temp_file.zip");
            unzip($tag, $file);
            unlink($file);
            break;
        case "Darwin":
            $file = download_file("https://github.com/killertux/temoc/releases/download/{$tag}/temoc_{$tag}_x86_64-apple-darwin.zip", "temp_file.zip");
            unzip($tag, $file);
            unlink($file);
            break;
        case "Linux":
            $file = download_file("https://github.com/killertux/temoc/releases/download/{$tag}/temoc_{$tag}_x86_64-unknown-linux-musl.tar.gz", "temp_file.tar.gz");
            untar($tag, $file);
            unlink($file);
            break;
        default:
            echo "Not found binary for this OS\n";
            die(1);
    }
}

function download_file(string $url, string $output_file_name): string {
    $output_file = __DIR__ . '/' . $output_file_name;
    $fp = fopen ($output_file, 'w+');
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_TIMEOUT, 600);
    curl_setopt($ch, CURLOPT_FILE, $fp); 
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
    curl_exec($ch); 
    curl_close($ch);
    fclose($fp);
    return $output_file;
}

function unzip(string $tag, string $file): void {
    $zip = new ZipArchive;
    $zip->open($file);
    $zip->extractTo(executable_dir($tag));
    $zip->close();
    chmod(executable_dir($tag) . executable(), 0750);
}

function untar(string $tag, string $file): void {
    $phar = new PharData($file);
    $phar->extractTo(executable_dir($tag));
    chmod(executable_dir($tag) . executable(), 0750);
}

function executable(): string {
    return match(PHP_OS_FAMILY) {
        "Windows" => "temoc.exe",
        default => "temoc"
    };
}

function executable_dir(string $tag): string {
    return __DIR__ . "/.cache/" . PHP_OS_FAMILY . "/temoc_$tag/";
}